// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMRK.Models;

namespace TMRK.Migrations
{
    [DbContext(typeof(TMRKLOGContext))]
    [Migration("20200826082939_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TMRK.Entities.Request", b =>
                {
                    b.Property<long>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RequestID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CallTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MethodInput")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("MethodOrginalName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("PointerId")
                        .HasColumnName("PointerID")
                        .HasColumnType("bigint");

                    b.Property<int>("ServiceId")
                        .HasColumnName("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("ServiceMethodId")
                        .HasColumnName("ServiceMethodID")
                        .HasColumnType("int");

                    b.Property<string>("SummeryData")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("RequestId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("TMRK.Entities.Response", b =>
                {
                    b.Property<long>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ResponseID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int");

                    b.Property<string>("Exception")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MethodOutput")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<long?>("PointerId")
                        .HasColumnName("PointerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequestId")
                        .HasColumnName("RequestID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ServiceId")
                        .HasColumnName("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("ServiceMethodId")
                        .HasColumnName("ServiceMethodID")
                        .HasColumnType("int");

                    b.Property<string>("SummeryData")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("ResponseId");

                    b.HasIndex("RequestId");

                    b.ToTable("Response");
                });

            modelBuilder.Entity("TMRK.Entities.Response", b =>
                {
                    b.HasOne("TMRK.Entities.Request", "Request")
                        .WithMany("Response")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_Response_Request");
                });
#pragma warning restore 612, 618
        }
    }
}
